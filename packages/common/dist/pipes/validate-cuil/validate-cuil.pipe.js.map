{"version":3,"sources":["../../../src/pipes/validate-cuil/validate-cuil.pipe.ts"],"names":["CUIL_LENGTH","registerDecorator"],"mappings":";;;;;;AAQO,MAAM,qBAA8D,CAAA;AAAA,EAC1E,SAAS,IAAc,EAAA;AACtB,IAAI,IAAA,IAAA,CAAK,WAAWA,qBAAa,EAAA;AAChC,MAAO,OAAA,KAAA,CAAA;AAAA,KACR;AACA,IAAA,MAAM,CAAC,UAAA,EAAY,GAAG,IAAI,CAAI,GAAA,IAAA,CAAK,KAAM,CAAA,EAAE,CAAE,CAAA,GAAA,CAAI,MAAM,CAAA,CAAE,OAAQ,EAAA,CAAA;AACjE,IAAA,MAAM,QAAQ,IAAK,CAAA,MAAA;AAAA,MAClB,CAAC,GAAK,EAAA,GAAA,EAAK,UAAU,GAAM,GAAA,GAAA,IAAO,IAAK,KAAQ,GAAA,CAAA,CAAA;AAAA,MAC/C,CAAA;AAAA,KACD,CAAA;AAEA,IAAM,MAAA,KAAA,GAAQA,wBAAe,KAAQ,GAAAA,qBAAA,CAAA;AAErC,IAAA,IAAI,UAAUA,qBAAa,EAAA;AAC1B,MAAA,OAAO,UAAe,KAAA,CAAA,CAAA;AAAA,KACvB;AAEA,IAAA,IAAI,UAAU,EAAI,EAAA;AACjB,MAAO,OAAA,KAAA,CAAA;AAAA,KACR;AAEA,IAAA,OAAO,UAAe,KAAA,KAAA,CAAA;AAAA,GACvB;AAAA,EACA,eAAe,mBAAmD,EAAA;AACjE,IAAO,OAAA,cAAA,CAAA;AAAA,GACR;AACD,CAAA;AAEO,SAAS,WAAA,CACf,UACA,iBACC,EAAA;AAED,EAAO,OAAA,CAAC,QAAgB,YAAyB,KAAA;AAChD,IAAkBC,gCAAA,CAAA;AAAA,MACjB,IAAM,EAAA,aAAA;AAAA,MACN,QAAQ,MAAO,CAAA,WAAA;AAAA,MACf,YAAA;AAAA,MACA,OAAS,EAAA,iBAAA;AAAA,MACT,SAAW,EAAA,qBAAA;AAAA,KACX,CAAA,CAAA;AAAA,GACF,CAAA;AACD","file":"validate-cuil.pipe.js","sourcesContent":["import {\n\ttype ValidationArguments,\n\ttype ValidationOptions,\n\ttype ValidatorConstraintInterface,\n\tregisterDecorator,\n} from 'class-validator';\nimport { CUIL_LENGTH } from '../../constants';\n\nexport class IsValidCuilConstraint implements ValidatorConstraintInterface {\n\tvalidate(cuil: string) {\n\t\tif (cuil.length !== CUIL_LENGTH) {\n\t\t\treturn false;\n\t\t}\n\t\tconst [checkDigit, ...rest] = cuil.split('').map(Number).reverse();\n\t\tconst total = rest.reduce(\n\t\t\t(acc, cur, index) => acc + cur * (2 + (index % 6)),\n\t\t\t0,\n\t\t);\n\n\t\tconst mod11 = CUIL_LENGTH - (total % CUIL_LENGTH);\n\n\t\tif (mod11 === CUIL_LENGTH) {\n\t\t\treturn checkDigit === 0;\n\t\t}\n\n\t\tif (mod11 === 10) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn checkDigit === mod11;\n\t}\n\tdefaultMessage(validationArguments?: ValidationArguments): string {\n\t\treturn 'Invalid CUIL';\n\t}\n}\n\nexport function IsValidCuil(\n\tproperty: string,\n\tvalidationOptions?: ValidationOptions,\n) {\n\t// biome-ignore lint/complexity/noBannedTypes: Class-validator type is not supported\n\treturn (object: Object, propertyName: string) => {\n\t\tregisterDecorator({\n\t\t\tname: 'IsValidCuil',\n\t\t\ttarget: object.constructor,\n\t\t\tpropertyName: propertyName,\n\t\t\toptions: validationOptions,\n\t\t\tvalidator: IsValidCuilConstraint,\n\t\t});\n\t};\n}\n"]}